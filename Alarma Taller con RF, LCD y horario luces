#include <Wire.h>                 // libreria de comunicacion por I2C
#include <LCD.h>                  // libreria para funciones de LCD
#include <LiquidCrystal_I2C.h>    // libreria para LCD por I2C
#include <SPI.h>                  // libreria bus SPI
#include <MFRC522.h>              // libreria RFID
////Luces/////
#include "Sodaq_DS3231.h"
char DiaSemana[][4] = {"Dom", "Lun", "Mar", "Mie", "Jue", "Vie", "Sab"};
// La linea fija la fecha, hora y dia de la semana, se debe suprimir la linea en la segunda carga
// Ejemplo 2018 noviembre 11, 08:00:00  dia 6-Sabado (0=Dom, 1=Lun, 2=Mar, 3=Mie, 4=Jue, 5=Vie, 6=Sab)
//DateTime dt(2022, 03, 31, 17, 53, 55, 4);
/////Luces/////

LiquidCrystal_I2C lcd (0x27, 2, 1, 0, 4, 5, 6, 7);    // DIR, E, RW, RS, D4, D5, D6, D7

#define rele    7               // constante para  rele 1
#define RST       9              // constante para  pin de reset
#define SS       10             // constante para  pin de slave select

MFRC522 mfrc522(SS, RST); // crea objeto mfrc522 enviando pines de slave select y reset

byte LecturaUID[4];                             // crea array para almacenar el UID leido
byte Usuario1[4] = {0x8A, 0XF0, 0X79, 0X81} ;   // UID Malpa Llavero
byte Usuario3[4] = {0xD4, 0X0B, 0XC2, 0X49 } ;  // UID Jose Luis
byte Usuario4[4] = {0x73, 0X5E, 0XC1, 0X49 } ;  // UID Ismael
byte Usuario5[4] = {0xAA, 0X84, 0XC2, 0X49 } ;  // UID Angel
byte Usuario6[4] = {0xA4, 0X8F, 0XC1, 0X49 } ;  // UID Carolina

void beep(unsigned char pausa)
{
  analogWrite(3, 20);
  delay(pausa);                 // Espera
  analogWrite(3, 0);            // Apaga
  delay(pausa);                 // Espera
}

void setup() {
  //////////Luces///////
  rtc.begin();
  Wire.begin();

  // La linea fija la fecha, hora y dia de la semana, se debe suprimir la linea en la segunda carga
  //rtc.setDateTime(dt);
  //////Luces /////////
  lcd.setBacklightPin(3, POSITIVE);     // puerto P3 de PCF8574 como positivo
  lcd.begin(16, 2);                     // LCD 16 columnas por 2 lineas
  lcd.clear();                          // limpia pantalla LCD
  lcd.setCursor(2, 0);                  // ubica cursor en columna 0 y linea 0
  lcd.print(" MalpaDesign ");     // escribe el texto

  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(rele, OUTPUT);

  beep(50);
  beep(50);
  beep(50);

  //  delay(1000);
  Serial.begin(9600);                   // inicializa comunicacion por monitor serie a 9600 bps
  SPI.begin();                          // inicializa bus SPI
  mfrc522.PCD_Init();                   // inicializa modulo lector
  //digitalWrite(2, LOW);           // Condici√≥n inicial de rele en OFF
  digitalWrite(8, LOW);
}
boolean comparaUID(byte lectura[], byte usuario[]) // funcion comparaUID
{
  for (byte i = 0; i < mfrc522.uid.size; i++) {   //Lee  byte a byte del UID
    if (lectura[i] != usuario[i])                 // si byte de UID leido es diferente
      return (false);                             // retorna falso
  }
  return (true);                                  // si los 4 bytes coinciden retorna verdadero
}


void loop() {
  alarma();
  luces();
  sonido();
}

void alarma()
{
  lcd.clear();                          // limpia pantalla LCD
  lcd.setCursor(2, 0);                  // ubica cursor en columna 0 y linea 0
  lcd.print(" MalpaDesign ");     // escribe el texto
  {
  }

  lcd.setBacklight(LOW);
  if ( ! mfrc522.PICC_IsNewCardPresent())   // si no hay una tarjeta presente
    return;                                 // retorna al loop esperando por una tarjeta

  if ( ! mfrc522.PICC_ReadCardSerial())     // si no puede obtener datos de la tarjeta
    return;                                 // retorna al loop esperando por otra tarjeta

  Serial.print("UID:");                                   // muestra texto UID:
  for (byte i = 0; i < mfrc522.uid.size; i++) {           // Lee  byte a byte del UID
    if (mfrc522.uid.uidByte[i] < 0x10) {                  // si el byte leido es menor a 0x10
      Serial.print(" 0");                                // escribe espacio en blanco y numero cero
    }
    else {
      Serial.print(" ");                                // imprime un espacio en blanco
    }
    Serial.print(mfrc522.uid.uidByte[i], HEX);         // imprime el byte del UID leido en hexadecimal
    LecturaUID[i] = mfrc522.uid.uidByte[i];           // almacena en array el byte del UID leido
  }

  Serial.println(" ");                                 // cambio de linea

  if (comparaUID(LecturaUID, Usuario1)) {             // llama funcion comparaUID del Usuario1
    digitalWrite(rele, !digitalRead(rele));       //si tarajeta esta autorizada cambia estado actual de rele

    if (digitalRead(rele) == 0) {

      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      //digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.setCursor(1, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print("  Chao Malpa  ");     // escribe el texto

      lcd.setCursor(1, 1);                             // ubica cursor en columna 17 y linea 3
      lcd.print("Alarma Activa");
      delay(3000);
      lcd.clear();

    }
    else {




      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      delay(200);
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off

      lcd.setCursor(2, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print(" Hola Malpa ");     // escribe el texto
      lcd.setCursor(1, 1);

      lcd.print("Alarma Inactiva ");
      delay(3000);
      lcd.clear();

    }

  }

  else if (comparaUID(LecturaUID, Usuario3)) {            // llama funcion comparaUID del Usuario1
    digitalWrite(rele, !digitalRead(rele));       //si tarajeta esta autorizada cambia estado actual de rele


    if (digitalRead(rele) == 0) {
      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.setCursor(1, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print("  Chao Jose  ");     // escribe el texto
      lcd.setCursor(1, 1);                             // ubica cursor en columna 17 y linea 3
      lcd.print("Alarma Activa");
      delay(3000);
      lcd.clear();

    }
    else {
      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      delay(200);
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.clear();// escribe el texto
      lcd.setCursor(2, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print(" Hola Jose ");     // escribe el texto
      lcd.setCursor(1, 1);

      lcd.print("Alarma Inactiva ");
      delay(3000);
      lcd.clear();
    }

  }
  else if (comparaUID(LecturaUID, Usuario4)) {            // llama funcion comparaUID del Usuario1
    digitalWrite(rele, !digitalRead(rele));       //si tarajeta esta autorizada cambia estado actual de rele


    if (digitalRead(rele) == 0) {
      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.setCursor(1, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print("  Chao Ismael  ");     // escribe el texto
      lcd.setCursor(1, 1);                             // ubica cursor en columna 17 y linea 3
      lcd.print("Alarma Activa");
      delay(3000);
      lcd.clear();

    }
    else {
      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      delay(200);
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.clear();// escribe el texto
      lcd.setCursor(2, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print(" Hola Ismael ");     // escribe el texto
      lcd.setCursor(1, 1);

      lcd.print("Alarma Inactiva ");
      delay(3000);
      lcd.clear();
    }

  }
  else if (comparaUID(LecturaUID, Usuario5)) {            // llama funcion comparaUID del Usuario1
    digitalWrite(rele, !digitalRead(rele));       //si tarajeta esta autorizada cambia estado actual de rele


    if (digitalRead(rele) == 0) {
      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.setCursor(1, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print("  Chao Angel  ");     // escribe el texto
      lcd.setCursor(1, 1);                             // ubica cursor en columna 17 y linea 3
      lcd.print("Alarma Activa");
      delay(3000);
      lcd.clear();

    }
    else {
      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      delay(200);
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.clear();// escribe el texto
      lcd.setCursor(2, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print(" Hola Angel ");     // escribe el texto
      lcd.setCursor(1, 1);

      lcd.print("Alarma Inactiva ");
      delay(3000);
      lcd.clear();
    }

  }
  else if (comparaUID(LecturaUID, Usuario6)) {            // llama funcion comparaUID del Usuario1
    digitalWrite(rele, !digitalRead(rele));       //si tarajeta esta autorizada cambia estado actual de rele


    if (digitalRead(rele) == 0) {
      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.setCursor(1, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print("  Chao Caro  ");     // escribe el texto
      lcd.setCursor(1, 1);                             // ubica cursor en columna 17 y linea 3
      lcd.print("Alarma Activa");
      delay(3000);
      lcd.clear();

    }
    else {
      lcd.clear();
      lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      delay(200);
      digitalWrite(8, HIGH); // sets the digital pin 8 on
      delay(200);            // waits for a second
      digitalWrite(8, LOW);  // sets the digital pin 8 off
      lcd.clear();// escribe el texto
      lcd.setCursor(2, 0);                  // ubica cursor en columna 0 y linea 0
      lcd.print(" Hola Caro ");     // escribe el texto
      lcd.setCursor(1, 1);

      lcd.print("Alarma Inactiva ");
      delay(3000);
      lcd.clear();
    }

  }
  else {
    lcd.clear();// escribe el texto
    lcd.setCursor(2, 0);                  // ubica cursor en columna 0 y linea 0
    lcd.print(" Mamaguevo ");     // escribe el texto
    lcd.setCursor(0, 1);
    lcd.setBacklight(HIGH); //Prende la luz Pantalla LCD
    lcd.print("Tarjeta Invalida  ");  // escribe el texto
    delay(3000);                        //el texto dura en pantalla LCD  3 sg
    lcd.clear();// escribe el texto
    lcd.setCursor(6, 0);
    lcd.print("3..  ");  // escribe el texto
    delay(1000);
    lcd.clear();// escribe el texto
    lcd.setCursor(6, 0);
    lcd.print("2..  ");  // escribe el texto
    delay(1000);
    lcd.clear();// escribe el texto
    lcd.setCursor(6, 0);
    lcd.print("1..  ");  // escribe el texto
    delay(1000);
    lcd.clear();// escribe el texto
    lcd.setCursor(4, 0);
    lcd.print("Corre :D");  // escribe el texto
    delay(1000);
    lcd.clear();// escribe el texto
    lcd.setBacklight(LOW); //Prende la luz Pantalla LCD
    digitalWrite(8, HIGH); // sets the digital pin 8 on
    delay(30000);            // waits for a second
    digitalWrite(8, LOW);  // sets the digital pin 8 off

  }

  mfrc522.PICC_HaltA();               // termina comunicacion con tarjeta
}

void luces() {
  DateTime now = rtc.now();
  Serial.print("Hora: ");
  Serial.print(now.hour());
  Serial.print(":");
  Serial.print(now.minute());
  Serial.print(":");
  Serial.println(now.second());

  delay(1000);

  int hora    = now.hour();
  int minuto  = now.minute();
  int segundo = now.second();
  int dia = now.dayOfWeek();
  //////////////Luces//////////////////////////

  if (hora >= 18 && minuto >= 0 ) {
    Serial.print(" Luces encendidas ");
    digitalWrite(5, false);
  }

  if (hora >= 0 && minuto >= 0 && hora <= 5 ) {
    Serial.print(" Luces encendidas ");
    digitalWrite(5, false);
  }

  if (hora >= 6 && minuto >= 0 && hora <= 17 ) {
    Serial.print(" Luces apagadas ");
    digitalWrite(5, true);
  }

  if (hora >= 18 && minuto >= 0 && dia == 6 ) {
    Serial.print(" Luces local encendidas ");
    digitalWrite(2, false);
  }

  if (hora >= 0 && minuto >= 0 && hora <= 3 && dia == 0 ) {
    Serial.print(" Luces local encendidas ");
    digitalWrite(2, false);
  }

  if (hora >= 4 && minuto >= 0 && hora <= 17 && dia == 0 ) {
    Serial.print(" Luces local apagadas ");
    digitalWrite(2, true);
  }

}

void sonido() {

  DateTime now = rtc.now();

  int hora    = now.hour();
  int minuto  = now.minute();
  int segundo = now.second();
  int dia = now.dayOfWeek();
  //////////////Luces//////////////////////////


  if (hora == 17 && minuto == 0 ) {
    beep(500);
    beep(500);
    beep(500);

  }
}
